syntax = "proto3";

package hashipet.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/johanbrandhorst/hashipet";
    description: "HashiPet API repository";
  }
  schemes: HTTP;
};

enum Species {
  SPECIES_UNSPECIFIED = 0;
  SPECIES_PIG = 1;
  SPECIES_DOG = 2;
  SPECIES_CAT = 3;
}

message Pet {
  string name = 1;
  string owner = 2;
  Species species = 3;
  string picture_url = 4;
  bool the_best = 5;
}

service HashiPetService {
  rpc CreatePet(CreatePetRequest) returns (CreatePetResponse) {
    option (google.api.http) = {
      post: "/v1/pets",
      body: "pet",
      response_body: "pet",
    };
  }
  rpc GetPet(GetPetRequest) returns (GetPetResponse) {
    option (google.api.http) = {
      get: "/v1/pets/{name}",
      response_body: "pet",
    };
  }
  rpc ListPets(ListPetsRequest) returns (ListPetsResponse) {
    option (google.api.http) = {
      get: "/v1/pets",
    };
  }
  rpc DeletePet(DeletePetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/pets/{name}",
    };
  }
  rpc UpdatePet(UpdatePetRequest) returns (UpdatePetResponse) {
    option (google.api.http) = {
      patch: "/v1/pets/{pet.name}",
      body: "pet",
      response_body: "pet",
    };
  }
}

message CreatePetRequest {
  Pet pet = 1;
}

message CreatePetResponse {
  Pet pet = 1;
}

message GetPetRequest {
  string name = 1;
}

message GetPetResponse {
  Pet pet = 1;
}

message ListPetsRequest {}

message ListPetsResponse {
  repeated Pet pets = 1;
}

message DeletePetRequest {
  string name = 1;
}

message UpdatePetRequest {
  Pet pet = 1;
  google.protobuf.FieldMask update_mask = 2;
}

message UpdatePetResponse {
  Pet pet = 1;
}
